var searchIndex = JSON.parse('{\
"lib":{"doc":"","t":[0,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["shareable","simple","ShareableOrderedVec","ShareableOrderedVecState","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone_into","count","count_invalid","default","finish_update","fmt","from","from","get","get_mut","get_next_id_increment","get_next_idx","get_shareable","index","index_mut","init_update","insert","into","into","iter","iter_indexed","iter_indexed_mut","iter_invalid","iter_mut","my_drain","remove","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","OrderedVec","borrow","borrow_mut","clear","clone","clone_into","count","count_invalid","default","fmt","from","get","get_mut","get_next_idx","index","index_mut","into","iter","iter_indexed","iter_indexed_mut","iter_invalid","iter_mut","my_drain","push_shove","remove","to_owned","try_from","try_into","type_id"],"q":["lib","","lib::shareable","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","lib::simple","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","A collection that keeps the ordering of its elements, even …","A shareable state that can be created by a …","","","","","Clear the whole ordered vector","","","Get the number of valid elements in the ordered vector","Get the number of invalid elements in the ordered vector","","Update the rest of the stuff at the end, after we edit the …","","","","Get a reference to an element in the ordered vector","Get a mutable reference to an element in the ordered vector","Check the next ID where we can add an element, but also …","Get the index of the next element that we will add","Get the shareable state that we can clone and send to …","","","Update the atomic counters at the start, before we do …","Add an element to the ordered vector, but at a specific …","","","Get an iterator over the valid elements","Get an iterator over the valid elements","Get a mutable iterator over the valid elements with their …","Get an iterator over the indices of the null elements","Get a mutable iterator over the valid elements","Drain the elements that only return true. This will return …","Remove an element that was already added","","","","","","","","A collection that keeps the ordering of its elements, even …","","","Clear the whole ordered vector","","","Get the number of valid elements in the ordered vector","Get the number of invalid elements in the ordered vector","","","","Get a reference to an element in the ordered vector","Get a mutable reference to an element in the ordered vector","Get the index of the next element that we will add","","","","Get an iterator over the valid elements","Get an iterator over the valid elements","Get a mutable iterator over the valid elements with their …","Get an iterator over the indices of the null elements","Get a mutable iterator over the valid elements","Drain the elements that only return true. This will return …","Add an element to the ordered vector","Remove an element that was already added","","","",""],"i":[0,0,0,0,1,2,1,2,1,2,2,1,1,1,1,1,1,2,1,1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,2,1,2,1,2,1,2,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],"f":[null,null,null,null,[[]],[[]],[[]],[[]],[[],["vec",3,[["option",4]]]],[[],["shareableorderedvecstate",3]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["formatter",3]],["result",6]],[[]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["arc",3,[["shareableorderedvecstate",3]]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[],["vec",3,[["option",4]]]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"ShareableOrderedVec"],[3,"ShareableOrderedVecState"],[3,"OrderedVec"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};