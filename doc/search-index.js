var searchIndex = JSON.parse('{\
"lib":{"doc":"","t":[0,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ordered_vec","OrderedVec","borrow","borrow_mut","clone","clone_into","count","default","fmt","from","get","get_mut","get_next_idx","index","index_mut","into","iter","iter_invalid","iter_mut","my_drain","push_shove","remove","to_owned","try_from","try_into","type_id"],"q":["lib","lib::ordered_vec","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","A collection that keeps the ordering of its elements, even …","","","","","Get the number of valid elements in the ordered vector","","","","Get a reference to an element in the ordered vector","Get a mutable reference to an element in the ordered vector","Get the index of the next element that we will add","","","","Get an iterator over the valid elements","Get an iterator over the indices of the null elements","Get a mutable iterator over the valid elements","Drain the elements that only return true. This will return …","Add an element to the ordered vector","Remove an element that was already added","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,[[]],[[]],[[]],[[]],[[],["usize",15]],[[]],[[["formatter",3]],["result",6]],[[]],[[["usize",15]],["option",4]],[[["usize",15]],["option",4]],[[],["usize",15]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[["usize",15]],["option",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]]],"p":[[3,"OrderedVec"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};